[{"C:\\Users\\sajad\\PycharmProjects\\shenakht\\src\\index.js":"1","C:\\Users\\sajad\\PycharmProjects\\shenakht\\src\\reportWebVitals.js":"2","C:\\Users\\sajad\\PycharmProjects\\shenakht\\src\\component\\MainPage.js":"3","C:\\Users\\sajad\\PycharmProjects\\shenakht\\src\\component\\DetailPage.js":"4","C:\\Users\\sajad\\PycharmProjects\\shenakht\\src\\db\\DBConfig.js":"5","C:\\Users\\sajad\\PycharmProjects\\shenakht\\src\\component\\MainComponent.js":"6"},{"size":525,"mtime":1611632418122,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":1197,"mtime":1611656126687,"results":"10","hashOfConfig":"8"},{"size":5584,"mtime":1611657906705,"results":"11","hashOfConfig":"8"},{"size":507,"mtime":1611607791079,"results":"12","hashOfConfig":"8"},{"size":2088,"mtime":1611657545080,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1e4awm8",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\sajad\\PycharmProjects\\shenakht\\src\\index.js",[],["28","29"],"C:\\Users\\sajad\\PycharmProjects\\shenakht\\src\\reportWebVitals.js",[],"C:\\Users\\sajad\\PycharmProjects\\shenakht\\src\\component\\MainPage.js",[],"C:\\Users\\sajad\\PycharmProjects\\shenakht\\src\\component\\DetailPage.js",["30"],"import {useIndexedDB} from \"react-indexed-db\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport MainComponent from \"./MainComponent\";\r\n\r\nfunction DetailPage() {\r\n    const {getAll, add, update, deleteRecord} = useIndexedDB('item');\r\n    const [items, setItems] = useState([]);\r\n    const [updateCount, setUpdateCount] = useState(0);\r\n    const handleKeyPress = (event, item, index) => {\r\n        if (event.key.toLowerCase() === \"tab\") {\r\n            event.preventDefault();\r\n        }\r\n        if (event.key.toLowerCase() === \"delete\" && event.ctrlKey && event.shiftKey) {\r\n            event.preventDefault();\r\n            deleteRecord(item.id).then(\r\n                event => {\r\n                    console.log('ID Deleted: ', event.target);\r\n                    setUpdateCount(updateCount + 1);\r\n                },\r\n                error => {\r\n                    console.log(error);\r\n                }\r\n            )\r\n        }\r\n        if (event.key.toLowerCase() === 'enter') {\r\n            console.log('enter press here! ' + event.key + \"  id=\" + item.id);\r\n            addItem(\"\", item.index, item.date + 100, item.parentId);\r\n        }\r\n        if (event.key.toLowerCase() === 'tab' && event.shiftKey) {\r\n            handleShiftToParent(item);\r\n        } else if (event.key.toLowerCase() === 'tab') {\r\n            handleShiftToChild(item, index);\r\n        }\r\n    }\r\n\r\n    const handleChangeInput = (e, item) => {\r\n        console.log(\"change=\" + e.target.value + \"  =\" + item.id + \" index=\" + item.index)\r\n        update({\r\n            id: item.id,\r\n            title: e.target.value,\r\n            index: item.index,\r\n            parentId: item.parentId,\r\n            date: item.date\r\n        }).then(event => {\r\n            console.log(\"editedItemid\" + item.id);\r\n            setUpdateCount(updateCount + 1);\r\n        });\r\n    }\r\n    const handleShiftToParent = (item) => {\r\n        update({\r\n            id: item.id,\r\n            title: item.title,\r\n            index: item.index,\r\n            parentId: 0,\r\n            date: item.date\r\n        }).then(event => {\r\n            setUpdateCount(updateCount + 1);\r\n        });\r\n    }\r\n    const handleShiftToChild = (item, index) => {\r\n        update({\r\n            id: item.id,\r\n            title: item.title,\r\n            index: item.index,\r\n            parentId: index === 0 ? 0 : items[index - 1].id,\r\n            date: item.date\r\n        }).then(event => {\r\n            setUpdateCount(updateCount + 1);\r\n        });\r\n    }\r\n    const handleAddChild = (e, item) => {\r\n        add({title: \"\", index: item.index, parentId: item.id, date: item.date + 1}).then(\r\n            event => {\r\n                console.log('child ID Generated: ', event.target);\r\n                setUpdateCount(updateCount + 1);\r\n            },\r\n            error => {\r\n                console.log(error);\r\n            }\r\n        );\r\n    }\r\n\r\n    const addItem = (title, pos, date, parentId) => {\r\n        console.log(\"pos=\" + pos)\r\n        add({title: title, index: pos, parentId: parentId, date: date}).then(\r\n            event => {\r\n                console.log('ID Generated: ', event.target);\r\n                setUpdateCount(updateCount + 1);\r\n            },\r\n            error => {\r\n                console.log(error);\r\n            }\r\n        );\r\n    };\r\n    useEffect(() => {\r\n        getAll().then(itemsFromDB => {\r\n            console.log(itemsFromDB);\r\n            setItems(itemsFromDB);\r\n        }).catch((err) => console.log(err));\r\n    }, [updateCount]);\r\n\r\n    return (\r\n        <div>\r\n            {(items != null && items.length > 0) ?\r\n                items.filter(et => et.parentId === 0).sort(function (a, b) {\r\n                        // console.log(\"a=\" + a.index + \"b=\" + b.index)\r\n                        if (a.index > b.index) {\r\n                            return 1;\r\n                        } else if (a.index < b.index) {\r\n                            return -1;\r\n                        } else if (a.index === b.index) {\r\n                            if (a.date > b.date) {\r\n                                return 1;\r\n                            } else {\r\n                                return -1;\r\n                            }\r\n                        } else {\r\n                            return 0;\r\n                        }\r\n                    }\r\n                ).map((it, index) => (\r\n                    <MainComponent itemIndex={index} key={it.id} details={items.filter(et => et.parentId === it.id)}\r\n                                   item={it}\r\n                                   callback={handleKeyPress} change={handleChangeInput}\r\n                                   addChild={handleAddChild}\r\n                    />\r\n                ))\r\n                :\r\n                null}\r\n            <button onClick={() => {\r\n                if (items.length > 0) {\r\n                    addItem(\"\", (items[items.length - 1].index + 1), new Date().getTime(), 0);\r\n                } else {\r\n                    addItem(\"\", 1, new Date().getTime(), 0);\r\n                }\r\n            }}\r\n                    style={{\r\n                        margin: \"1rem\",\r\n                        border:\"white\",\r\n                        borderColor: \"white\",\r\n                        backgroundColor: \"white\",\r\n                        borderRadius: \"1.5rem\",\r\n                        width: \"3rem\",\r\n                        height: \"3rem\",\r\n                        fontSize: \"3rem\",\r\n                        color: \"black\"\r\n                    }}>+\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DetailPage","C:\\Users\\sajad\\PycharmProjects\\shenakht\\src\\db\\DBConfig.js",[],"C:\\Users\\sajad\\PycharmProjects\\shenakht\\src\\component\\MainComponent.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":100,"column":8,"nodeType":"37","endLine":100,"endColumn":21,"suggestions":"38"},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAll'. Either include it or remove the dependency array.","ArrayExpression",["41"],"no-global-assign","no-unsafe-negation",{"desc":"42","fix":"43"},"Update the dependencies array to be: [getAll, updateCount]",{"range":"44","text":"45"},[3492,3505],"[getAll, updateCount]"]